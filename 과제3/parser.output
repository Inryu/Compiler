

Terminals which are not used:

   TLONG
   TOVERE
   TILLIDENT
   TONECMT
   TMULCMT


Conflict in state 162 between rule 61 and token TELSE resolved as shift.
State 20 contains 1 shift/reduce conflict.
State 31 contains 1 shift/reduce conflict.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    external_dcl -> TIDENT TSEMI
rule 7    external_dcl -> TIDENT error
rule 8    function_def -> function_header compound_st
rule 9    function_def -> function_header TSEMI
rule 10   function_def -> function_header error
rule 11   function_header -> dcl_spec function_name formal_param
rule 12   dcl_spec -> dcl_specifiers
rule 13   dcl_specifiers -> dcl_specifier
rule 14   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 15   dcl_specifier -> type_qualifier
rule 16   dcl_specifier -> type_specifier
rule 17   type_qualifier -> TCONST
rule 18   type_specifier -> TINT
rule 19   type_specifier -> TVOID
rule 20   type_specifier -> TFLOAT
rule 21   function_name -> TIDENT
rule 22   formal_param -> TOSBRA opt_formal_param TCSBRA
rule 23   opt_formal_param -> formal_param_list
rule 24   opt_formal_param ->		/* empty */
rule 25   formal_param_list -> param_dcl
rule 26   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 27   param_dcl -> dcl_spec declarator
rule 28   compound_st -> TOMBRA opt_dcl_list opt_stat_list TCMBRA
rule 29   compound_st -> TOMBRA opt_dcl_list opt_stat_list error
rule 30   opt_dcl_list -> declaration_list
rule 31   opt_dcl_list ->		/* empty */
rule 32   declaration_list -> declaration
rule 33   declaration_list -> declaration_list declaration
rule 34   declaration -> dcl_spec init_dcl_list TSEMI
rule 35   declaration -> dcl_spec init_dcl_list error
rule 36   init_dcl_list -> init_declarator
rule 37   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 38   init_declarator -> declarator
rule 39   init_declarator -> declarator TASSIGN TNUMBER
rule 40   init_declarator -> declarator TASSIGN TPOINT
rule 41   declarator -> TIDENT
rule 42   declarator -> TIDENT TOLBRA opt_number TCLBRA
rule 43   declarator -> TIDENT TOLBRA opt_number error
rule 44   opt_number -> TNUMBER
rule 45   opt_number -> TPOINT
rule 46   opt_number ->		/* empty */
rule 47   opt_stat_list -> statement_list
rule 48   opt_stat_list ->		/* empty */
rule 49   statement_list -> statement
rule 50   statement_list -> statement_list statement
rule 51   statement_list -> statement_list declaration
rule 52   statement -> compound_st
rule 53   statement -> expression_st
rule 54   statement -> if_st
rule 55   statement -> while_st
rule 56   statement -> return_st
rule 57   expression_st -> opt_expression TSEMI
rule 58   expression_st -> expression error
rule 59   opt_expression -> expression
rule 60   opt_expression ->		/* empty */
rule 61   if_st -> TIF TOSBRA expression TCSBRA statement
rule 62   if_st -> TIF TOSBRA expression TCSBRA statement TELSE statement
rule 63   while_st -> TWHILE TOSBRA expression TCSBRA statement
rule 64   return_st -> TRETURN opt_expression TSEMI
rule 65   expression -> assignment_exp
rule 66   assignment_exp -> logical_or_exp
rule 67   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 68   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 69   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 70   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 71   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 72   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 73   logical_or_exp -> logical_and_exp
rule 74   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 75   logical_and_exp -> equality_exp
rule 76   logical_and_exp -> logical_and_exp TAND equality_exp
rule 77   equality_exp -> relational_exp
rule 78   equality_exp -> equality_exp TEQUAL relational_exp
rule 79   equality_exp -> equality_exp TNOTEQU relational_exp
rule 80   relational_exp -> additive_exp
rule 81   relational_exp -> relational_exp TOVER additive_exp
rule 82   relational_exp -> relational_exp TLESS additive_exp
rule 83   relational_exp -> relational_exp TGREATE additive_exp
rule 84   relational_exp -> relational_exp TLESSE additive_exp
rule 85   additive_exp -> multiplicative_exp
rule 86   additive_exp -> additive_exp TPLUS multiplicative_exp
rule 87   additive_exp -> additive_exp TMINUS multiplicative_exp
rule 88   multiplicative_exp -> unary_exp
rule 89   multiplicative_exp -> multiplicative_exp TSTAR unary_exp
rule 90   multiplicative_exp -> multiplicative_exp TSLASH unary_exp
rule 91   multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 92   unary_exp -> postfix_exp
rule 93   unary_exp -> TMINUS unary_exp
rule 94   unary_exp -> TNOT unary_exp
rule 95   unary_exp -> TINC unary_exp
rule 96   unary_exp -> TDEC unary_exp
rule 97   postfix_exp -> primary_exp
rule 98   postfix_exp -> postfix_exp TOLBRA expression TCLBRA
rule 99   postfix_exp -> postfix_exp TOSBRA opt_actual_param TCSBRA
rule 100  postfix_exp -> postfix_exp TINC
rule 101  postfix_exp -> postfix_exp TDEC
rule 102  opt_actual_param -> actual_param
rule 103  opt_actual_param ->		/* empty */
rule 104  actual_param -> actual_param_list
rule 105  actual_param_list -> assignment_exp
rule 106  actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 107  primary_exp -> TIDENT
rule 108  primary_exp -> TNUMBER
rule 109  primary_exp -> TFLOAT
rule 110  primary_exp -> TOSBRA expression TCSBRA

Terminals, with rules where they appear

$ (-1)
error (256) 7 10 29 35 43 58
TCONST (258) 17
TELSE (259) 62
TIF (260) 61 62
TINT (261) 18
TRETURN (262) 64
TVOID (263) 19
TWHILE (264) 63
TPOINT (265) 40 45
TPLUS (266) 86
TMINUS (267) 87 93
TSTAR (268) 89
TSLASH (269) 90
TMOD (270) 91
TASSIGN (271) 39 40 67
TADDASSIGN (272) 68
TSUBASSIGN (273) 69
TMULASSIGN (274) 70
TDIVASSIGN (275) 71
TMODASSIGN (276) 72
TOR (277) 74
TEQUAL (278) 78
TNOTEQU (279) 79
TLESS (280) 82
TOVER (281) 81
TLESSE (282) 84
TINC (283) 95 100
TDEC (284) 96 101
TOSBRA (285) 22 61 62 63 99 110
TCSBRA (286) 22 61 62 63 99 110
TCOMMA (287) 26 37 106
TOMBRA (288) 28 29
TCMBRA (289) 28
TOLBRA (290) 42 43 98
TCLBRA (291) 42 98
TSEMI (292) 6 9 34 57 64
TNUMBER (293) 39 44 108
TFLOAT (294) 20 109
TLONG (295)
TNOT (296) 94
TAND (297) 76
TOVERE (298)
TILLIDENT (299)
TONECMT (300)
TMULCMT (301)
TIDENT (302) 6 7 21 41 42 43 107
TGREATE (303) 83
LOWER_THAN_ELSE (304)

Nonterminals, with rules where they appear

mini_c (50)
    on left: 1
translation_unit (51)
    on left: 2 3, on right: 1 3
external_dcl (52)
    on left: 4 5 6 7, on right: 2 3
function_def (53)
    on left: 8 9 10, on right: 4
function_header (54)
    on left: 11, on right: 8 9 10
dcl_spec (55)
    on left: 12, on right: 11 27 34 35
dcl_specifiers (56)
    on left: 13 14, on right: 12 14
dcl_specifier (57)
    on left: 15 16, on right: 13 14
type_qualifier (58)
    on left: 17, on right: 15
type_specifier (59)
    on left: 18 19 20, on right: 16
function_name (60)
    on left: 21, on right: 11
formal_param (61)
    on left: 22, on right: 11
opt_formal_param (62)
    on left: 23 24, on right: 22
formal_param_list (63)
    on left: 25 26, on right: 23 26
param_dcl (64)
    on left: 27, on right: 25 26
compound_st (65)
    on left: 28 29, on right: 8 52
opt_dcl_list (66)
    on left: 30 31, on right: 28 29
declaration_list (67)
    on left: 32 33, on right: 30 33
declaration (68)
    on left: 34 35, on right: 5 32 33 51
init_dcl_list (69)
    on left: 36 37, on right: 34 35 37
init_declarator (70)
    on left: 38 39 40, on right: 36 37
declarator (71)
    on left: 41 42 43, on right: 27 38 39 40
opt_number (72)
    on left: 44 45 46, on right: 42 43
opt_stat_list (73)
    on left: 47 48, on right: 28 29
statement_list (74)
    on left: 49 50 51, on right: 47 50 51
statement (75)
    on left: 52 53 54 55 56, on right: 49 50 61 62 63
expression_st (76)
    on left: 57 58, on right: 53
opt_expression (77)
    on left: 59 60, on right: 57 64
if_st (78)
    on left: 61 62, on right: 54
while_st (79)
    on left: 63, on right: 55
return_st (80)
    on left: 64, on right: 56
expression (81)
    on left: 65, on right: 58 59 61 62 63 98 110
assignment_exp (82)
    on left: 66 67 68 69 70 71 72, on right: 65 67 68 69 70 71 72 105
    106
logical_or_exp (83)
    on left: 73 74, on right: 66 74
logical_and_exp (84)
    on left: 75 76, on right: 73 74 76
equality_exp (85)
    on left: 77 78 79, on right: 75 76 78 79
relational_exp (86)
    on left: 80 81 82 83 84, on right: 77 78 79 81 82 83 84
additive_exp (87)
    on left: 85 86 87, on right: 80 81 82 83 84 86 87
multiplicative_exp (88)
    on left: 88 89 90 91, on right: 85 86 87 89 90 91
unary_exp (89)
    on left: 92 93 94 95 96, on right: 67 68 69 70 71 72 88 89 90 91
    93 94 95 96
postfix_exp (90)
    on left: 97 98 99 100 101, on right: 92 98 99 100 101
opt_actual_param (91)
    on left: 102 103, on right: 99
actual_param (92)
    on left: 104, on right: 102
actual_param_list (93)
    on left: 105 106, on right: 104 106
primary_exp (94)
    on left: 107 108 109 110, on right: 97


state 0

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TIDENT	shift, and go to state 5

    mini_c	go to state 167
    translation_unit	go to state 6
    external_dcl	go to state 7
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 1

    type_qualifier  ->  TCONST .   (rule 17)

    $default	reduce using rule 17 (type_qualifier)



state 2

    type_specifier  ->  TINT .   (rule 18)

    $default	reduce using rule 18 (type_specifier)



state 3

    type_specifier  ->  TVOID .   (rule 19)

    $default	reduce using rule 19 (type_specifier)



state 4

    type_specifier  ->  TFLOAT .   (rule 20)

    $default	reduce using rule 20 (type_specifier)



state 5

    external_dcl  ->  TIDENT . TSEMI   (rule 6)
    external_dcl  ->  TIDENT . error   (rule 7)

    error	shift, and go to state 16
    TSEMI	shift, and go to state 17



state 6

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TFLOAT	shift, and go to state 4
    TIDENT	shift, and go to state 5

    $default	reduce using rule 1 (mini_c)

    external_dcl	go to state 18
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 7

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 8

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 9

    function_def  ->  function_header . compound_st   (rule 8)
    function_def  ->  function_header . TSEMI   (rule 9)
    function_def  ->  function_header . error   (rule 10)

    error	shift, and go to state 19
    TOMBRA	shift, and go to state 20
    TSEMI	shift, and go to state 21

    compound_st	go to state 22



state 10

    function_header  ->  dcl_spec . function_name formal_param   (rule 11)
    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 34)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 35)

    TIDENT	shift, and go to state 23

    function_name	go to state 24
    init_dcl_list	go to state 25
    init_declarator	go to state 26
    declarator	go to state 27



state 11

    dcl_spec  ->  dcl_specifiers .   (rule 12)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 14)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TFLOAT	shift, and go to state 4

    $default	reduce using rule 12 (dcl_spec)

    dcl_specifier	go to state 28
    type_qualifier	go to state 13
    type_specifier	go to state 14



state 12

    dcl_specifiers  ->  dcl_specifier .   (rule 13)

    $default	reduce using rule 13 (dcl_specifiers)



state 13

    dcl_specifier  ->  type_qualifier .   (rule 15)

    $default	reduce using rule 15 (dcl_specifier)



state 14

    dcl_specifier  ->  type_specifier .   (rule 16)

    $default	reduce using rule 16 (dcl_specifier)



state 15

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 16

    external_dcl  ->  TIDENT error .   (rule 7)

    $default	reduce using rule 7 (external_dcl)



state 17

    external_dcl  ->  TIDENT TSEMI .   (rule 6)

    $default	reduce using rule 6 (external_dcl)



state 18

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 19

    function_def  ->  function_header error .   (rule 10)

    $default	reduce using rule 10 (function_def)



state 20

    compound_st  ->  TOMBRA . opt_dcl_list opt_stat_list TCMBRA   (rule 28)
    compound_st  ->  TOMBRA . opt_dcl_list opt_stat_list error   (rule 29)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TFLOAT	shift, and go to state 4

    TFLOAT	[reduce using rule 31 (opt_dcl_list)]
    $default	reduce using rule 31 (opt_dcl_list)

    dcl_spec	go to state 29
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_dcl_list	go to state 30
    declaration_list	go to state 31
    declaration	go to state 32



state 21

    function_def  ->  function_header TSEMI .   (rule 9)

    $default	reduce using rule 9 (function_def)



state 22

    function_def  ->  function_header compound_st .   (rule 8)

    $default	reduce using rule 8 (function_def)



state 23

    function_name  ->  TIDENT .   (rule 21)
    declarator  ->  TIDENT .   (rule 41)
    declarator  ->  TIDENT . TOLBRA opt_number TCLBRA   (rule 42)
    declarator  ->  TIDENT . TOLBRA opt_number error   (rule 43)

    TOLBRA	shift, and go to state 33

    TOSBRA	reduce using rule 21 (function_name)
    $default	reduce using rule 41 (declarator)



state 24

    function_header  ->  dcl_spec function_name . formal_param   (rule 11)

    TOSBRA	shift, and go to state 34

    formal_param	go to state 35



state 25

    declaration  ->  dcl_spec init_dcl_list . TSEMI   (rule 34)
    declaration  ->  dcl_spec init_dcl_list . error   (rule 35)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 37)

    error	shift, and go to state 36
    TCOMMA	shift, and go to state 37
    TSEMI	shift, and go to state 38



state 26

    init_dcl_list  ->  init_declarator .   (rule 36)

    $default	reduce using rule 36 (init_dcl_list)



state 27

    init_declarator  ->  declarator .   (rule 38)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 39)
    init_declarator  ->  declarator . TASSIGN TPOINT   (rule 40)

    TASSIGN	shift, and go to state 39

    $default	reduce using rule 38 (init_declarator)



state 28

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 14)

    $default	reduce using rule 14 (dcl_specifiers)



state 29

    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 34)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 35)

    TIDENT	shift, and go to state 40

    init_dcl_list	go to state 25
    init_declarator	go to state 26
    declarator	go to state 27



state 30

    compound_st  ->  TOMBRA opt_dcl_list . opt_stat_list TCMBRA   (rule 28)
    compound_st  ->  TOMBRA opt_dcl_list . opt_stat_list error   (rule 29)

    TIF 	shift, and go to state 41
    TRETURN	shift, and go to state 42
    TWHILE	shift, and go to state 43
    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TOMBRA	shift, and go to state 20
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    TSEMI	reduce using rule 60 (opt_expression)
    $default	reduce using rule 48 (opt_stat_list)

    compound_st	go to state 52
    opt_stat_list	go to state 53
    statement_list	go to state 54
    statement	go to state 55
    expression_st	go to state 56
    opt_expression	go to state 57
    if_st	go to state 58
    while_st	go to state 59
    return_st	go to state 60
    expression	go to state 61
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 31

    opt_dcl_list  ->  declaration_list .   (rule 30)
    declaration_list  ->  declaration_list . declaration   (rule 33)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TFLOAT	shift, and go to state 4

    TFLOAT	[reduce using rule 30 (opt_dcl_list)]
    $default	reduce using rule 30 (opt_dcl_list)

    dcl_spec	go to state 29
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 72



state 32

    declaration_list  ->  declaration .   (rule 32)

    $default	reduce using rule 32 (declaration_list)



state 33

    declarator  ->  TIDENT TOLBRA . opt_number TCLBRA   (rule 42)
    declarator  ->  TIDENT TOLBRA . opt_number error   (rule 43)

    TPOINT	shift, and go to state 73
    TNUMBER	shift, and go to state 74

    $default	reduce using rule 46 (opt_number)

    opt_number	go to state 75



state 34

    formal_param  ->  TOSBRA . opt_formal_param TCSBRA   (rule 22)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TFLOAT	shift, and go to state 4

    $default	reduce using rule 24 (opt_formal_param)

    dcl_spec	go to state 76
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_formal_param	go to state 77
    formal_param_list	go to state 78
    param_dcl	go to state 79



state 35

    function_header  ->  dcl_spec function_name formal_param .   (rule 11)

    $default	reduce using rule 11 (function_header)



state 36

    declaration  ->  dcl_spec init_dcl_list error .   (rule 35)

    $default	reduce using rule 35 (declaration)



state 37

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 37)

    TIDENT	shift, and go to state 40

    init_declarator	go to state 80
    declarator	go to state 27



state 38

    declaration  ->  dcl_spec init_dcl_list TSEMI .   (rule 34)

    $default	reduce using rule 34 (declaration)



state 39

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 39)
    init_declarator  ->  declarator TASSIGN . TPOINT   (rule 40)

    TPOINT	shift, and go to state 81
    TNUMBER	shift, and go to state 82



state 40

    declarator  ->  TIDENT .   (rule 41)
    declarator  ->  TIDENT . TOLBRA opt_number TCLBRA   (rule 42)
    declarator  ->  TIDENT . TOLBRA opt_number error   (rule 43)

    TOLBRA	shift, and go to state 33

    $default	reduce using rule 41 (declarator)



state 41

    if_st  ->  TIF . TOSBRA expression TCSBRA statement   (rule 61)
    if_st  ->  TIF . TOSBRA expression TCSBRA statement TELSE statement   (rule 62)

    TOSBRA	shift, and go to state 83



state 42

    return_st  ->  TRETURN . opt_expression TSEMI   (rule 64)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    $default	reduce using rule 60 (opt_expression)

    opt_expression	go to state 84
    expression	go to state 85
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 43

    while_st  ->  TWHILE . TOSBRA expression TCSBRA statement   (rule 63)

    TOSBRA	shift, and go to state 86



state 44

    unary_exp  ->  TMINUS . unary_exp   (rule 93)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    unary_exp	go to state 87
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 45

    unary_exp  ->  TINC . unary_exp   (rule 95)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    unary_exp	go to state 88
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 46

    unary_exp  ->  TDEC . unary_exp   (rule 96)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    unary_exp	go to state 89
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 47

    primary_exp  ->  TOSBRA . expression TCSBRA   (rule 110)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    expression	go to state 90
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 48

    primary_exp  ->  TNUMBER .   (rule 108)

    $default	reduce using rule 108 (primary_exp)



state 49

    primary_exp  ->  TFLOAT .   (rule 109)

    $default	reduce using rule 109 (primary_exp)



state 50

    unary_exp  ->  TNOT . unary_exp   (rule 94)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    unary_exp	go to state 91
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 51

    primary_exp  ->  TIDENT .   (rule 107)

    $default	reduce using rule 107 (primary_exp)



state 52

    statement  ->  compound_st .   (rule 52)

    $default	reduce using rule 52 (statement)



state 53

    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list . TCMBRA   (rule 28)
    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list . error   (rule 29)

    error	shift, and go to state 92
    TCMBRA	shift, and go to state 93



state 54

    opt_stat_list  ->  statement_list .   (rule 47)
    statement_list  ->  statement_list . statement   (rule 50)
    statement_list  ->  statement_list . declaration   (rule 51)

    TCONST	shift, and go to state 1
    TIF 	shift, and go to state 41
    TINT	shift, and go to state 2
    TRETURN	shift, and go to state 42
    TVOID	shift, and go to state 3
    TWHILE	shift, and go to state 43
    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TOMBRA	shift, and go to state 20
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 94
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    TSEMI	reduce using rule 60 (opt_expression)
    $default	reduce using rule 47 (opt_stat_list)

    dcl_spec	go to state 29
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    compound_st	go to state 52
    declaration	go to state 95
    statement	go to state 96
    expression_st	go to state 56
    opt_expression	go to state 57
    if_st	go to state 58
    while_st	go to state 59
    return_st	go to state 60
    expression	go to state 61
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 55

    statement_list  ->  statement .   (rule 49)

    $default	reduce using rule 49 (statement_list)



state 56

    statement  ->  expression_st .   (rule 53)

    $default	reduce using rule 53 (statement)



state 57

    expression_st  ->  opt_expression . TSEMI   (rule 57)

    TSEMI	shift, and go to state 97



state 58

    statement  ->  if_st .   (rule 54)

    $default	reduce using rule 54 (statement)



state 59

    statement  ->  while_st .   (rule 55)

    $default	reduce using rule 55 (statement)



state 60

    statement  ->  return_st .   (rule 56)

    $default	reduce using rule 56 (statement)



state 61

    expression_st  ->  expression . error   (rule 58)
    opt_expression  ->  expression .   (rule 59)

    error	shift, and go to state 98

    TSEMI	reduce using rule 59 (opt_expression)



state 62

    expression  ->  assignment_exp .   (rule 65)

    $default	reduce using rule 65 (expression)



state 63

    assignment_exp  ->  logical_or_exp .   (rule 66)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 74)

    TOR 	shift, and go to state 99

    $default	reduce using rule 66 (assignment_exp)



state 64

    logical_or_exp  ->  logical_and_exp .   (rule 73)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 76)

    TAND	shift, and go to state 100

    $default	reduce using rule 73 (logical_or_exp)



state 65

    logical_and_exp  ->  equality_exp .   (rule 75)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 78)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 79)

    TEQUAL	shift, and go to state 101
    TNOTEQU	shift, and go to state 102

    $default	reduce using rule 75 (logical_and_exp)



state 66

    equality_exp  ->  relational_exp .   (rule 77)
    relational_exp  ->  relational_exp . TOVER additive_exp   (rule 81)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 82)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 83)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 84)

    TLESS	shift, and go to state 103
    TOVER	shift, and go to state 104
    TLESSE	shift, and go to state 105
    TGREATE	shift, and go to state 106

    $default	reduce using rule 77 (equality_exp)



state 67

    relational_exp  ->  additive_exp .   (rule 80)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 86)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 87)

    TPLUS	shift, and go to state 107
    TMINUS	shift, and go to state 108

    $default	reduce using rule 80 (relational_exp)



state 68

    additive_exp  ->  multiplicative_exp .   (rule 85)
    multiplicative_exp  ->  multiplicative_exp . TSTAR unary_exp   (rule 89)
    multiplicative_exp  ->  multiplicative_exp . TSLASH unary_exp   (rule 90)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 91)

    TSTAR	shift, and go to state 109
    TSLASH	shift, and go to state 110
    TMOD	shift, and go to state 111

    $default	reduce using rule 85 (additive_exp)



state 69

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 67)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 68)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 69)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 70)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 71)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 72)
    multiplicative_exp  ->  unary_exp .   (rule 88)

    TASSIGN	shift, and go to state 112
    TADDASSIGN	shift, and go to state 113
    TSUBASSIGN	shift, and go to state 114
    TMULASSIGN	shift, and go to state 115
    TDIVASSIGN	shift, and go to state 116
    TMODASSIGN	shift, and go to state 117

    $default	reduce using rule 88 (multiplicative_exp)



state 70

    unary_exp  ->  postfix_exp .   (rule 92)
    postfix_exp  ->  postfix_exp . TOLBRA expression TCLBRA   (rule 98)
    postfix_exp  ->  postfix_exp . TOSBRA opt_actual_param TCSBRA   (rule 99)
    postfix_exp  ->  postfix_exp . TINC   (rule 100)
    postfix_exp  ->  postfix_exp . TDEC   (rule 101)

    TINC	shift, and go to state 118
    TDEC	shift, and go to state 119
    TOSBRA	shift, and go to state 120
    TOLBRA	shift, and go to state 121

    $default	reduce using rule 92 (unary_exp)



state 71

    postfix_exp  ->  primary_exp .   (rule 97)

    $default	reduce using rule 97 (postfix_exp)



state 72

    declaration_list  ->  declaration_list declaration .   (rule 33)

    $default	reduce using rule 33 (declaration_list)



state 73

    opt_number  ->  TPOINT .   (rule 45)

    $default	reduce using rule 45 (opt_number)



state 74

    opt_number  ->  TNUMBER .   (rule 44)

    $default	reduce using rule 44 (opt_number)



state 75

    declarator  ->  TIDENT TOLBRA opt_number . TCLBRA   (rule 42)
    declarator  ->  TIDENT TOLBRA opt_number . error   (rule 43)

    error	shift, and go to state 122
    TCLBRA	shift, and go to state 123



state 76

    param_dcl  ->  dcl_spec . declarator   (rule 27)

    TIDENT	shift, and go to state 40

    declarator	go to state 124



state 77

    formal_param  ->  TOSBRA opt_formal_param . TCSBRA   (rule 22)

    TCSBRA	shift, and go to state 125



state 78

    opt_formal_param  ->  formal_param_list .   (rule 23)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 26)

    TCOMMA	shift, and go to state 126

    $default	reduce using rule 23 (opt_formal_param)



state 79

    formal_param_list  ->  param_dcl .   (rule 25)

    $default	reduce using rule 25 (formal_param_list)



state 80

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 37)

    $default	reduce using rule 37 (init_dcl_list)



state 81

    init_declarator  ->  declarator TASSIGN TPOINT .   (rule 40)

    $default	reduce using rule 40 (init_declarator)



state 82

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 39)

    $default	reduce using rule 39 (init_declarator)



state 83

    if_st  ->  TIF TOSBRA . expression TCSBRA statement   (rule 61)
    if_st  ->  TIF TOSBRA . expression TCSBRA statement TELSE statement   (rule 62)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    expression	go to state 127
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 84

    return_st  ->  TRETURN opt_expression . TSEMI   (rule 64)

    TSEMI	shift, and go to state 128



state 85

    opt_expression  ->  expression .   (rule 59)

    $default	reduce using rule 59 (opt_expression)



state 86

    while_st  ->  TWHILE TOSBRA . expression TCSBRA statement   (rule 63)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    expression	go to state 129
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 87

    unary_exp  ->  TMINUS unary_exp .   (rule 93)

    $default	reduce using rule 93 (unary_exp)



state 88

    unary_exp  ->  TINC unary_exp .   (rule 95)

    $default	reduce using rule 95 (unary_exp)



state 89

    unary_exp  ->  TDEC unary_exp .   (rule 96)

    $default	reduce using rule 96 (unary_exp)



state 90

    primary_exp  ->  TOSBRA expression . TCSBRA   (rule 110)

    TCSBRA	shift, and go to state 130



state 91

    unary_exp  ->  TNOT unary_exp .   (rule 94)

    $default	reduce using rule 94 (unary_exp)



state 92

    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list error .   (rule 29)

    $default	reduce using rule 29 (compound_st)



state 93

    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list TCMBRA .   (rule 28)

    $default	reduce using rule 28 (compound_st)



state 94

    type_specifier  ->  TFLOAT .   (rule 20)
    primary_exp  ->  TFLOAT .   (rule 109)

    TCONST	reduce using rule 20 (type_specifier)
    TINT	reduce using rule 20 (type_specifier)
    TVOID	reduce using rule 20 (type_specifier)
    TFLOAT	reduce using rule 20 (type_specifier)
    TIDENT	reduce using rule 20 (type_specifier)
    $default	reduce using rule 109 (primary_exp)



state 95

    statement_list  ->  statement_list declaration .   (rule 51)

    $default	reduce using rule 51 (statement_list)



state 96

    statement_list  ->  statement_list statement .   (rule 50)

    $default	reduce using rule 50 (statement_list)



state 97

    expression_st  ->  opt_expression TSEMI .   (rule 57)

    $default	reduce using rule 57 (expression_st)



state 98

    expression_st  ->  expression error .   (rule 58)

    $default	reduce using rule 58 (expression_st)



state 99

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 74)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    logical_and_exp	go to state 131
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 100

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 76)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    equality_exp	go to state 133
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 101

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 78)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    relational_exp	go to state 134
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 102

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 79)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    relational_exp	go to state 135
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 103

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 82)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    additive_exp	go to state 136
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 104

    relational_exp  ->  relational_exp TOVER . additive_exp   (rule 81)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    additive_exp	go to state 137
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 105

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 84)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    additive_exp	go to state 138
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 106

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 83)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    additive_exp	go to state 139
    multiplicative_exp	go to state 68
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 107

    additive_exp  ->  additive_exp TPLUS . multiplicative_exp   (rule 86)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    multiplicative_exp	go to state 140
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 108

    additive_exp  ->  additive_exp TMINUS . multiplicative_exp   (rule 87)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    multiplicative_exp	go to state 141
    unary_exp	go to state 132
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 109

    multiplicative_exp  ->  multiplicative_exp TSTAR . unary_exp   (rule 89)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    unary_exp	go to state 142
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 110

    multiplicative_exp  ->  multiplicative_exp TSLASH . unary_exp   (rule 90)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    unary_exp	go to state 143
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 111

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 91)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    unary_exp	go to state 144
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 112

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 67)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    assignment_exp	go to state 145
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 113

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 68)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    assignment_exp	go to state 146
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 114

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 69)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    assignment_exp	go to state 147
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 115

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 70)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    assignment_exp	go to state 148
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 116

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 71)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    assignment_exp	go to state 149
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 117

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 72)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    assignment_exp	go to state 150
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 118

    postfix_exp  ->  postfix_exp TINC .   (rule 100)

    $default	reduce using rule 100 (postfix_exp)



state 119

    postfix_exp  ->  postfix_exp TDEC .   (rule 101)

    $default	reduce using rule 101 (postfix_exp)



state 120

    postfix_exp  ->  postfix_exp TOSBRA . opt_actual_param TCSBRA   (rule 99)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    $default	reduce using rule 103 (opt_actual_param)

    assignment_exp	go to state 151
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    opt_actual_param	go to state 152
    actual_param	go to state 153
    actual_param_list	go to state 154
    primary_exp	go to state 71



state 121

    postfix_exp  ->  postfix_exp TOLBRA . expression TCLBRA   (rule 98)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    expression	go to state 155
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 122

    declarator  ->  TIDENT TOLBRA opt_number error .   (rule 43)

    $default	reduce using rule 43 (declarator)



state 123

    declarator  ->  TIDENT TOLBRA opt_number TCLBRA .   (rule 42)

    $default	reduce using rule 42 (declarator)



state 124

    param_dcl  ->  dcl_spec declarator .   (rule 27)

    $default	reduce using rule 27 (param_dcl)



state 125

    formal_param  ->  TOSBRA opt_formal_param TCSBRA .   (rule 22)

    $default	reduce using rule 22 (formal_param)



state 126

    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 26)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TFLOAT	shift, and go to state 4

    dcl_spec	go to state 76
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 156



state 127

    if_st  ->  TIF TOSBRA expression . TCSBRA statement   (rule 61)
    if_st  ->  TIF TOSBRA expression . TCSBRA statement TELSE statement   (rule 62)

    TCSBRA	shift, and go to state 157



state 128

    return_st  ->  TRETURN opt_expression TSEMI .   (rule 64)

    $default	reduce using rule 64 (return_st)



state 129

    while_st  ->  TWHILE TOSBRA expression . TCSBRA statement   (rule 63)

    TCSBRA	shift, and go to state 158



state 130

    primary_exp  ->  TOSBRA expression TCSBRA .   (rule 110)

    $default	reduce using rule 110 (primary_exp)



state 131

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 74)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 76)

    TAND	shift, and go to state 100

    $default	reduce using rule 74 (logical_or_exp)



state 132

    multiplicative_exp  ->  unary_exp .   (rule 88)

    $default	reduce using rule 88 (multiplicative_exp)



state 133

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 76)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 78)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 79)

    TEQUAL	shift, and go to state 101
    TNOTEQU	shift, and go to state 102

    $default	reduce using rule 76 (logical_and_exp)



state 134

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 78)
    relational_exp  ->  relational_exp . TOVER additive_exp   (rule 81)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 82)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 83)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 84)

    TLESS	shift, and go to state 103
    TOVER	shift, and go to state 104
    TLESSE	shift, and go to state 105
    TGREATE	shift, and go to state 106

    $default	reduce using rule 78 (equality_exp)



state 135

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 79)
    relational_exp  ->  relational_exp . TOVER additive_exp   (rule 81)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 82)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 83)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 84)

    TLESS	shift, and go to state 103
    TOVER	shift, and go to state 104
    TLESSE	shift, and go to state 105
    TGREATE	shift, and go to state 106

    $default	reduce using rule 79 (equality_exp)



state 136

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 82)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 86)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 87)

    TPLUS	shift, and go to state 107
    TMINUS	shift, and go to state 108

    $default	reduce using rule 82 (relational_exp)



state 137

    relational_exp  ->  relational_exp TOVER additive_exp .   (rule 81)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 86)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 87)

    TPLUS	shift, and go to state 107
    TMINUS	shift, and go to state 108

    $default	reduce using rule 81 (relational_exp)



state 138

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 84)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 86)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 87)

    TPLUS	shift, and go to state 107
    TMINUS	shift, and go to state 108

    $default	reduce using rule 84 (relational_exp)



state 139

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 83)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 86)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 87)

    TPLUS	shift, and go to state 107
    TMINUS	shift, and go to state 108

    $default	reduce using rule 83 (relational_exp)



state 140

    additive_exp  ->  additive_exp TPLUS multiplicative_exp .   (rule 86)
    multiplicative_exp  ->  multiplicative_exp . TSTAR unary_exp   (rule 89)
    multiplicative_exp  ->  multiplicative_exp . TSLASH unary_exp   (rule 90)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 91)

    TSTAR	shift, and go to state 109
    TSLASH	shift, and go to state 110
    TMOD	shift, and go to state 111

    $default	reduce using rule 86 (additive_exp)



state 141

    additive_exp  ->  additive_exp TMINUS multiplicative_exp .   (rule 87)
    multiplicative_exp  ->  multiplicative_exp . TSTAR unary_exp   (rule 89)
    multiplicative_exp  ->  multiplicative_exp . TSLASH unary_exp   (rule 90)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 91)

    TSTAR	shift, and go to state 109
    TSLASH	shift, and go to state 110
    TMOD	shift, and go to state 111

    $default	reduce using rule 87 (additive_exp)



state 142

    multiplicative_exp  ->  multiplicative_exp TSTAR unary_exp .   (rule 89)

    $default	reduce using rule 89 (multiplicative_exp)



state 143

    multiplicative_exp  ->  multiplicative_exp TSLASH unary_exp .   (rule 90)

    $default	reduce using rule 90 (multiplicative_exp)



state 144

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 91)

    $default	reduce using rule 91 (multiplicative_exp)



state 145

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 67)

    $default	reduce using rule 67 (assignment_exp)



state 146

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 68)

    $default	reduce using rule 68 (assignment_exp)



state 147

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 69)

    $default	reduce using rule 69 (assignment_exp)



state 148

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 70)

    $default	reduce using rule 70 (assignment_exp)



state 149

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 71)

    $default	reduce using rule 71 (assignment_exp)



state 150

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 72)

    $default	reduce using rule 72 (assignment_exp)



state 151

    actual_param_list  ->  assignment_exp .   (rule 105)

    $default	reduce using rule 105 (actual_param_list)



state 152

    postfix_exp  ->  postfix_exp TOSBRA opt_actual_param . TCSBRA   (rule 99)

    TCSBRA	shift, and go to state 159



state 153

    opt_actual_param  ->  actual_param .   (rule 102)

    $default	reduce using rule 102 (opt_actual_param)



state 154

    actual_param  ->  actual_param_list .   (rule 104)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 106)

    TCOMMA	shift, and go to state 160

    $default	reduce using rule 104 (actual_param)



state 155

    postfix_exp  ->  postfix_exp TOLBRA expression . TCLBRA   (rule 98)

    TCLBRA	shift, and go to state 161



state 156

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 26)

    $default	reduce using rule 26 (formal_param_list)



state 157

    if_st  ->  TIF TOSBRA expression TCSBRA . statement   (rule 61)
    if_st  ->  TIF TOSBRA expression TCSBRA . statement TELSE statement   (rule 62)

    TIF 	shift, and go to state 41
    TRETURN	shift, and go to state 42
    TWHILE	shift, and go to state 43
    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TOMBRA	shift, and go to state 20
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    $default	reduce using rule 60 (opt_expression)

    compound_st	go to state 52
    statement	go to state 162
    expression_st	go to state 56
    opt_expression	go to state 57
    if_st	go to state 58
    while_st	go to state 59
    return_st	go to state 60
    expression	go to state 61
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 158

    while_st  ->  TWHILE TOSBRA expression TCSBRA . statement   (rule 63)

    TIF 	shift, and go to state 41
    TRETURN	shift, and go to state 42
    TWHILE	shift, and go to state 43
    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TOMBRA	shift, and go to state 20
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    $default	reduce using rule 60 (opt_expression)

    compound_st	go to state 52
    statement	go to state 163
    expression_st	go to state 56
    opt_expression	go to state 57
    if_st	go to state 58
    while_st	go to state 59
    return_st	go to state 60
    expression	go to state 61
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 159

    postfix_exp  ->  postfix_exp TOSBRA opt_actual_param TCSBRA .   (rule 99)

    $default	reduce using rule 99 (postfix_exp)



state 160

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 106)

    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    assignment_exp	go to state 164
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 161

    postfix_exp  ->  postfix_exp TOLBRA expression TCLBRA .   (rule 98)

    $default	reduce using rule 98 (postfix_exp)



state 162

    if_st  ->  TIF TOSBRA expression TCSBRA statement .   (rule 61)
    if_st  ->  TIF TOSBRA expression TCSBRA statement . TELSE statement   (rule 62)

    TELSE	shift, and go to state 165

    $default	reduce using rule 61 (if_st)



state 163

    while_st  ->  TWHILE TOSBRA expression TCSBRA statement .   (rule 63)

    $default	reduce using rule 63 (while_st)



state 164

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 106)

    $default	reduce using rule 106 (actual_param_list)



state 165

    if_st  ->  TIF TOSBRA expression TCSBRA statement TELSE . statement   (rule 62)

    TIF 	shift, and go to state 41
    TRETURN	shift, and go to state 42
    TWHILE	shift, and go to state 43
    TMINUS	shift, and go to state 44
    TINC	shift, and go to state 45
    TDEC	shift, and go to state 46
    TOSBRA	shift, and go to state 47
    TOMBRA	shift, and go to state 20
    TNUMBER	shift, and go to state 48
    TFLOAT	shift, and go to state 49
    TNOT	shift, and go to state 50
    TIDENT	shift, and go to state 51

    $default	reduce using rule 60 (opt_expression)

    compound_st	go to state 52
    statement	go to state 166
    expression_st	go to state 56
    opt_expression	go to state 57
    if_st	go to state 58
    while_st	go to state 59
    return_st	go to state 60
    expression	go to state 61
    assignment_exp	go to state 62
    logical_or_exp	go to state 63
    logical_and_exp	go to state 64
    equality_exp	go to state 65
    relational_exp	go to state 66
    additive_exp	go to state 67
    multiplicative_exp	go to state 68
    unary_exp	go to state 69
    postfix_exp	go to state 70
    primary_exp	go to state 71



state 166

    if_st  ->  TIF TOSBRA expression TCSBRA statement TELSE statement .   (rule 62)

    $default	reduce using rule 62 (if_st)



state 167

    $   	go to state 168



state 168

    $   	go to state 169



state 169

    $default	accept
