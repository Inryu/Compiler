Conflict in state 147 between rule 50 and token TELSE resolved as shift.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    function_def -> function_header compound_st
rule 7    function_header -> dcl_spec function_name formal_param
rule 8    dcl_spec -> dcl_specifiers
rule 9    dcl_specifiers -> dcl_specifier
rule 10   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 11   dcl_specifier -> type_qualifier
rule 12   dcl_specifier -> type_specifier
rule 13   type_qualifier -> TCONST
rule 14   type_specifier -> TINT
rule 15   type_specifier -> TVOID
rule 16   function_name -> TIDENT
rule 17   formal_param -> TOSBRA opt_formal_param TCSBRA
rule 18   opt_formal_param -> formal_param_list
rule 19   opt_formal_param ->		/* empty */
rule 20   formal_param_list -> param_dcl
rule 21   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 22   param_dcl -> dcl_spec declarator
rule 23   compound_st -> TOMBRA opt_dcl_list opt_stat_list TCMBRA
rule 24   compound_st -> TOMBRA opt_dcl_list opt_stat_list error
rule 25   opt_dcl_list -> declaration_list
rule 26   opt_dcl_list ->		/* empty */
rule 27   declaration_list -> declaration
rule 28   declaration_list -> declaration_list declaration
rule 29   declaration -> dcl_spec init_dcl_list TSEMI
rule 30   init_dcl_list -> init_declarator
rule 31   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 32   init_declarator -> declarator
rule 33   init_declarator -> declarator TASSIGN TNUMBER
rule 34   declarator -> TIDENT
rule 35   declarator -> TIDENT TOLBRA opt_number TCLBRA
rule 36   opt_number -> TNUMBER
rule 37   opt_number ->		/* empty */
rule 38   opt_stat_list -> statement_list
rule 39   opt_stat_list ->		/* empty */
rule 40   statement_list -> statement
rule 41   statement_list -> statement_list statement
rule 42   statement -> compound_st
rule 43   statement -> expression_st
rule 44   statement -> if_st
rule 45   statement -> while_st
rule 46   statement -> return_st
rule 47   expression_st -> opt_expression TSEMI
rule 48   opt_expression -> expression
rule 49   opt_expression ->		/* empty */
rule 50   if_st -> TIF TOSBRA expression TCSBRA statement
rule 51   if_st -> TIF TOSBRA expression TCSBRA statement TELSE statement
rule 52   while_st -> TWHILE TOSBRA expression TCSBRA statement
rule 53   return_st -> TRETURN opt_expression TSEMI
rule 54   expression -> assignment_exp
rule 55   assignment_exp -> logical_or_exp
rule 56   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 57   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 58   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 59   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 60   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 61   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 62   logical_or_exp -> logical_and_exp
rule 63   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 64   logical_and_exp -> equality_exp
rule 65   logical_and_exp -> logical_and_exp TAND equality_exp
rule 66   equality_exp -> relational_exp
rule 67   equality_exp -> equality_exp TEQUAL relational_exp
rule 68   equality_exp -> equality_exp TNOTEQU relational_exp
rule 69   relational_exp -> additive_exp
rule 70   relational_exp -> relational_exp TOVER additive_exp
rule 71   relational_exp -> relational_exp TLESS additive_exp
rule 72   relational_exp -> relational_exp TGREATE additive_exp
rule 73   relational_exp -> relational_exp TLESSE additive_exp
rule 74   additive_exp -> multiplicative_exp
rule 75   additive_exp -> additive_exp TPLUS multiplicative_exp
rule 76   additive_exp -> additive_exp TMINUS multiplicative_exp
rule 77   multiplicative_exp -> unary_exp
rule 78   multiplicative_exp -> multiplicative_exp TSTAR unary_exp
rule 79   multiplicative_exp -> multiplicative_exp TSLASH unary_exp
rule 80   multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 81   unary_exp -> postfix_exp
rule 82   unary_exp -> TMINUS unary_exp
rule 83   unary_exp -> TNOT unary_exp
rule 84   unary_exp -> TINC unary_exp
rule 85   unary_exp -> TDEC unary_exp
rule 86   postfix_exp -> primary_exp
rule 87   postfix_exp -> postfix_exp TOLBRA expression TCLBRA
rule 88   postfix_exp -> postfix_exp TOSBRA opt_actual_param TCSBRA
rule 89   postfix_exp -> postfix_exp TINC
rule 90   postfix_exp -> postfix_exp TDEC
rule 91   opt_actual_param -> actual_param
rule 92   opt_actual_param ->		/* empty */
rule 93   actual_param -> actual_param_list
rule 94   actual_param_list -> assignment_exp
rule 95   actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 96   primary_exp -> TIDENT
rule 97   primary_exp -> TNUMBER
rule 98   primary_exp -> TOSBRA expression TCSBRA

Terminals, with rules where they appear

$ (-1)
error (256) 24
TCONST (258) 13
TELSE (259) 51
TIF (260) 50 51
TINT (261) 14
TRETURN (262) 53
TVOID (263) 15
TWHILE (264) 52
TIDENT (265) 16 34 35 96
TGREATE (266) 72
TPLUS (267) 75
TMINUS (268) 76 82
TSTAR (269) 78
TSLASH (270) 79
TMOD (271) 80
TASSIGN (272) 33 56
TADDASSIGN (273) 57
TSUBASSIGN (274) 58
TMULASSIGN (275) 59
TDIVASSIGN (276) 60
TMODASSIGN (277) 61
TOR (278) 63
TEQUAL (279) 67
TNOTEQU (280) 68
TLESS (281) 71
TOVER (282) 70
TLESSE (283) 73
TINC (284) 84 89
TDEC (285) 85 90
TOSBRA (286) 17 50 51 52 88 98
TCSBRA (287) 17 50 51 52 88 98
TCOMMA (288) 21 31 95
TOMBRA (289) 23 24
TCMBRA (290) 23
TOLBRA (291) 35 87
TCLBRA (292) 35 87
TSEMI (293) 29 47 53
TNUMBER (294) 33 36 97
TNOT (295) 83
TAND (296) 65
LOWER_THAN_ELSE (297)

Nonterminals, with rules where they appear

mini_c (43)
    on left: 1
translation_unit (44)
    on left: 2 3, on right: 1 3
external_dcl (45)
    on left: 4 5, on right: 2 3
function_def (46)
    on left: 6, on right: 4
function_header (47)
    on left: 7, on right: 6
dcl_spec (48)
    on left: 8, on right: 7 22 29
dcl_specifiers (49)
    on left: 9 10, on right: 8 10
dcl_specifier (50)
    on left: 11 12, on right: 9 10
type_qualifier (51)
    on left: 13, on right: 11
type_specifier (52)
    on left: 14 15, on right: 12
function_name (53)
    on left: 16, on right: 7
formal_param (54)
    on left: 17, on right: 7
opt_formal_param (55)
    on left: 18 19, on right: 17
formal_param_list (56)
    on left: 20 21, on right: 18 21
param_dcl (57)
    on left: 22, on right: 20 21
compound_st (58)
    on left: 23 24, on right: 6 42
opt_dcl_list (59)
    on left: 25 26, on right: 23 24
declaration_list (60)
    on left: 27 28, on right: 25 28
declaration (61)
    on left: 29, on right: 5 27 28
init_dcl_list (62)
    on left: 30 31, on right: 29 31
init_declarator (63)
    on left: 32 33, on right: 30 31
declarator (64)
    on left: 34 35, on right: 22 32 33
opt_number (65)
    on left: 36 37, on right: 35
opt_stat_list (66)
    on left: 38 39, on right: 23 24
statement_list (67)
    on left: 40 41, on right: 38 41
statement (68)
    on left: 42 43 44 45 46, on right: 40 41 50 51 52
expression_st (69)
    on left: 47, on right: 43
opt_expression (70)
    on left: 48 49, on right: 47 53
if_st (71)
    on left: 50 51, on right: 44
while_st (72)
    on left: 52, on right: 45
return_st (73)
    on left: 53, on right: 46
expression (74)
    on left: 54, on right: 48 50 51 52 87 98
assignment_exp (75)
    on left: 55 56 57 58 59 60 61, on right: 54 56 57 58 59 60 61 94
    95
logical_or_exp (76)
    on left: 62 63, on right: 55 63
logical_and_exp (77)
    on left: 64 65, on right: 62 63 65
equality_exp (78)
    on left: 66 67 68, on right: 64 65 67 68
relational_exp (79)
    on left: 69 70 71 72 73, on right: 66 67 68 70 71 72 73
additive_exp (80)
    on left: 74 75 76, on right: 69 70 71 72 73 75 76
multiplicative_exp (81)
    on left: 77 78 79 80, on right: 74 75 76 78 79 80
unary_exp (82)
    on left: 81 82 83 84 85, on right: 56 57 58 59 60 61 77 78 79 80
    82 83 84 85
postfix_exp (83)
    on left: 86 87 88 89 90, on right: 81 87 88 89 90
opt_actual_param (84)
    on left: 91 92, on right: 88
actual_param (85)
    on left: 93, on right: 91
actual_param_list (86)
    on left: 94 95, on right: 93 95
primary_exp (87)
    on left: 96 97 98, on right: 86


state 0

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    mini_c	go to state 152
    translation_unit	go to state 4
    external_dcl	go to state 5
    function_def	go to state 6
    function_header	go to state 7
    dcl_spec	go to state 8
    dcl_specifiers	go to state 9
    dcl_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    declaration	go to state 13



state 1

    type_qualifier  ->  TCONST .   (rule 13)

    $default	reduce using rule 13 (type_qualifier)



state 2

    type_specifier  ->  TINT .   (rule 14)

    $default	reduce using rule 14 (type_specifier)



state 3

    type_specifier  ->  TVOID .   (rule 15)

    $default	reduce using rule 15 (type_specifier)



state 4

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 1 (mini_c)

    external_dcl	go to state 14
    function_def	go to state 6
    function_header	go to state 7
    dcl_spec	go to state 8
    dcl_specifiers	go to state 9
    dcl_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    declaration	go to state 13



state 5

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 6

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 7

    function_def  ->  function_header . compound_st   (rule 6)

    TOMBRA	shift, and go to state 15

    compound_st	go to state 16



state 8

    function_header  ->  dcl_spec . function_name formal_param   (rule 7)
    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 29)

    TIDENT	shift, and go to state 17

    function_name	go to state 18
    init_dcl_list	go to state 19
    init_declarator	go to state 20
    declarator	go to state 21



state 9

    dcl_spec  ->  dcl_specifiers .   (rule 8)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 10)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 8 (dcl_spec)

    dcl_specifier	go to state 22
    type_qualifier	go to state 11
    type_specifier	go to state 12



state 10

    dcl_specifiers  ->  dcl_specifier .   (rule 9)

    $default	reduce using rule 9 (dcl_specifiers)



state 11

    dcl_specifier  ->  type_qualifier .   (rule 11)

    $default	reduce using rule 11 (dcl_specifier)



state 12

    dcl_specifier  ->  type_specifier .   (rule 12)

    $default	reduce using rule 12 (dcl_specifier)



state 13

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 14

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 15

    compound_st  ->  TOMBRA . opt_dcl_list opt_stat_list TCMBRA   (rule 23)
    compound_st  ->  TOMBRA . opt_dcl_list opt_stat_list error   (rule 24)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 26 (opt_dcl_list)

    dcl_spec	go to state 23
    dcl_specifiers	go to state 9
    dcl_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    opt_dcl_list	go to state 24
    declaration_list	go to state 25
    declaration	go to state 26



state 16

    function_def  ->  function_header compound_st .   (rule 6)

    $default	reduce using rule 6 (function_def)



state 17

    function_name  ->  TIDENT .   (rule 16)
    declarator  ->  TIDENT .   (rule 34)
    declarator  ->  TIDENT . TOLBRA opt_number TCLBRA   (rule 35)

    TOLBRA	shift, and go to state 27

    TOSBRA	reduce using rule 16 (function_name)
    $default	reduce using rule 34 (declarator)



state 18

    function_header  ->  dcl_spec function_name . formal_param   (rule 7)

    TOSBRA	shift, and go to state 28

    formal_param	go to state 29



state 19

    declaration  ->  dcl_spec init_dcl_list . TSEMI   (rule 29)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 31)

    TCOMMA	shift, and go to state 30
    TSEMI	shift, and go to state 31



state 20

    init_dcl_list  ->  init_declarator .   (rule 30)

    $default	reduce using rule 30 (init_dcl_list)



state 21

    init_declarator  ->  declarator .   (rule 32)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 33)

    TASSIGN	shift, and go to state 32

    $default	reduce using rule 32 (init_declarator)



state 22

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 10)

    $default	reduce using rule 10 (dcl_specifiers)



state 23

    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 29)

    TIDENT	shift, and go to state 33

    init_dcl_list	go to state 19
    init_declarator	go to state 20
    declarator	go to state 21



state 24

    compound_st  ->  TOMBRA opt_dcl_list . opt_stat_list TCMBRA   (rule 23)
    compound_st  ->  TOMBRA opt_dcl_list . opt_stat_list error   (rule 24)

    TIF 	shift, and go to state 34
    TRETURN	shift, and go to state 35
    TWHILE	shift, and go to state 36
    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TOMBRA	shift, and go to state 15
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    TSEMI	reduce using rule 49 (opt_expression)
    $default	reduce using rule 39 (opt_stat_list)

    compound_st	go to state 44
    opt_stat_list	go to state 45
    statement_list	go to state 46
    statement	go to state 47
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 25

    opt_dcl_list  ->  declaration_list .   (rule 25)
    declaration_list  ->  declaration_list . declaration   (rule 28)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 25 (opt_dcl_list)

    dcl_spec	go to state 23
    dcl_specifiers	go to state 9
    dcl_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    declaration	go to state 64



state 26

    declaration_list  ->  declaration .   (rule 27)

    $default	reduce using rule 27 (declaration_list)



state 27

    declarator  ->  TIDENT TOLBRA . opt_number TCLBRA   (rule 35)

    TNUMBER	shift, and go to state 65

    $default	reduce using rule 37 (opt_number)

    opt_number	go to state 66



state 28

    formal_param  ->  TOSBRA . opt_formal_param TCSBRA   (rule 17)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    $default	reduce using rule 19 (opt_formal_param)

    dcl_spec	go to state 67
    dcl_specifiers	go to state 9
    dcl_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    opt_formal_param	go to state 68
    formal_param_list	go to state 69
    param_dcl	go to state 70



state 29

    function_header  ->  dcl_spec function_name formal_param .   (rule 7)

    $default	reduce using rule 7 (function_header)



state 30

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 31)

    TIDENT	shift, and go to state 33

    init_declarator	go to state 71
    declarator	go to state 21



state 31

    declaration  ->  dcl_spec init_dcl_list TSEMI .   (rule 29)

    $default	reduce using rule 29 (declaration)



state 32

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 33)

    TNUMBER	shift, and go to state 72



state 33

    declarator  ->  TIDENT .   (rule 34)
    declarator  ->  TIDENT . TOLBRA opt_number TCLBRA   (rule 35)

    TOLBRA	shift, and go to state 27

    $default	reduce using rule 34 (declarator)



state 34

    if_st  ->  TIF . TOSBRA expression TCSBRA statement   (rule 50)
    if_st  ->  TIF . TOSBRA expression TCSBRA statement TELSE statement   (rule 51)

    TOSBRA	shift, and go to state 73



state 35

    return_st  ->  TRETURN . opt_expression TSEMI   (rule 53)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    $default	reduce using rule 49 (opt_expression)

    opt_expression	go to state 74
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 36

    while_st  ->  TWHILE . TOSBRA expression TCSBRA statement   (rule 52)

    TOSBRA	shift, and go to state 75



state 37

    primary_exp  ->  TIDENT .   (rule 96)

    $default	reduce using rule 96 (primary_exp)



state 38

    unary_exp  ->  TMINUS . unary_exp   (rule 82)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    unary_exp	go to state 76
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 39

    unary_exp  ->  TINC . unary_exp   (rule 84)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    unary_exp	go to state 77
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 40

    unary_exp  ->  TDEC . unary_exp   (rule 85)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    unary_exp	go to state 78
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 41

    primary_exp  ->  TOSBRA . expression TCSBRA   (rule 98)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    expression	go to state 79
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 42

    primary_exp  ->  TNUMBER .   (rule 97)

    $default	reduce using rule 97 (primary_exp)



state 43

    unary_exp  ->  TNOT . unary_exp   (rule 83)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    unary_exp	go to state 80
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 44

    statement  ->  compound_st .   (rule 42)

    $default	reduce using rule 42 (statement)



state 45

    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list . TCMBRA   (rule 23)
    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list . error   (rule 24)

    error	shift, and go to state 81
    TCMBRA	shift, and go to state 82



state 46

    opt_stat_list  ->  statement_list .   (rule 38)
    statement_list  ->  statement_list . statement   (rule 41)

    TIF 	shift, and go to state 34
    TRETURN	shift, and go to state 35
    TWHILE	shift, and go to state 36
    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TOMBRA	shift, and go to state 15
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    TSEMI	reduce using rule 49 (opt_expression)
    $default	reduce using rule 38 (opt_stat_list)

    compound_st	go to state 44
    statement	go to state 83
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 47

    statement_list  ->  statement .   (rule 40)

    $default	reduce using rule 40 (statement_list)



state 48

    statement  ->  expression_st .   (rule 43)

    $default	reduce using rule 43 (statement)



state 49

    expression_st  ->  opt_expression . TSEMI   (rule 47)

    TSEMI	shift, and go to state 84



state 50

    statement  ->  if_st .   (rule 44)

    $default	reduce using rule 44 (statement)



state 51

    statement  ->  while_st .   (rule 45)

    $default	reduce using rule 45 (statement)



state 52

    statement  ->  return_st .   (rule 46)

    $default	reduce using rule 46 (statement)



state 53

    opt_expression  ->  expression .   (rule 48)

    $default	reduce using rule 48 (opt_expression)



state 54

    expression  ->  assignment_exp .   (rule 54)

    $default	reduce using rule 54 (expression)



state 55

    assignment_exp  ->  logical_or_exp .   (rule 55)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 63)

    TOR 	shift, and go to state 85

    $default	reduce using rule 55 (assignment_exp)



state 56

    logical_or_exp  ->  logical_and_exp .   (rule 62)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 65)

    TAND	shift, and go to state 86

    $default	reduce using rule 62 (logical_or_exp)



state 57

    logical_and_exp  ->  equality_exp .   (rule 64)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 67)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 68)

    TEQUAL	shift, and go to state 87
    TNOTEQU	shift, and go to state 88

    $default	reduce using rule 64 (logical_and_exp)



state 58

    equality_exp  ->  relational_exp .   (rule 66)
    relational_exp  ->  relational_exp . TOVER additive_exp   (rule 70)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 71)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 72)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 73)

    TGREATE	shift, and go to state 89
    TLESS	shift, and go to state 90
    TOVER	shift, and go to state 91
    TLESSE	shift, and go to state 92

    $default	reduce using rule 66 (equality_exp)



state 59

    relational_exp  ->  additive_exp .   (rule 69)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 75)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 76)

    TPLUS	shift, and go to state 93
    TMINUS	shift, and go to state 94

    $default	reduce using rule 69 (relational_exp)



state 60

    additive_exp  ->  multiplicative_exp .   (rule 74)
    multiplicative_exp  ->  multiplicative_exp . TSTAR unary_exp   (rule 78)
    multiplicative_exp  ->  multiplicative_exp . TSLASH unary_exp   (rule 79)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 80)

    TSTAR	shift, and go to state 95
    TSLASH	shift, and go to state 96
    TMOD	shift, and go to state 97

    $default	reduce using rule 74 (additive_exp)



state 61

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 56)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 57)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 58)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 59)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 60)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 61)
    multiplicative_exp  ->  unary_exp .   (rule 77)

    TASSIGN	shift, and go to state 98
    TADDASSIGN	shift, and go to state 99
    TSUBASSIGN	shift, and go to state 100
    TMULASSIGN	shift, and go to state 101
    TDIVASSIGN	shift, and go to state 102
    TMODASSIGN	shift, and go to state 103

    $default	reduce using rule 77 (multiplicative_exp)



state 62

    unary_exp  ->  postfix_exp .   (rule 81)
    postfix_exp  ->  postfix_exp . TOLBRA expression TCLBRA   (rule 87)
    postfix_exp  ->  postfix_exp . TOSBRA opt_actual_param TCSBRA   (rule 88)
    postfix_exp  ->  postfix_exp . TINC   (rule 89)
    postfix_exp  ->  postfix_exp . TDEC   (rule 90)

    TINC	shift, and go to state 104
    TDEC	shift, and go to state 105
    TOSBRA	shift, and go to state 106
    TOLBRA	shift, and go to state 107

    $default	reduce using rule 81 (unary_exp)



state 63

    postfix_exp  ->  primary_exp .   (rule 86)

    $default	reduce using rule 86 (postfix_exp)



state 64

    declaration_list  ->  declaration_list declaration .   (rule 28)

    $default	reduce using rule 28 (declaration_list)



state 65

    opt_number  ->  TNUMBER .   (rule 36)

    $default	reduce using rule 36 (opt_number)



state 66

    declarator  ->  TIDENT TOLBRA opt_number . TCLBRA   (rule 35)

    TCLBRA	shift, and go to state 108



state 67

    param_dcl  ->  dcl_spec . declarator   (rule 22)

    TIDENT	shift, and go to state 33

    declarator	go to state 109



state 68

    formal_param  ->  TOSBRA opt_formal_param . TCSBRA   (rule 17)

    TCSBRA	shift, and go to state 110



state 69

    opt_formal_param  ->  formal_param_list .   (rule 18)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 21)

    TCOMMA	shift, and go to state 111

    $default	reduce using rule 18 (opt_formal_param)



state 70

    formal_param_list  ->  param_dcl .   (rule 20)

    $default	reduce using rule 20 (formal_param_list)



state 71

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 31)

    $default	reduce using rule 31 (init_dcl_list)



state 72

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 33)

    $default	reduce using rule 33 (init_declarator)



state 73

    if_st  ->  TIF TOSBRA . expression TCSBRA statement   (rule 50)
    if_st  ->  TIF TOSBRA . expression TCSBRA statement TELSE statement   (rule 51)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    expression	go to state 112
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 74

    return_st  ->  TRETURN opt_expression . TSEMI   (rule 53)

    TSEMI	shift, and go to state 113



state 75

    while_st  ->  TWHILE TOSBRA . expression TCSBRA statement   (rule 52)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    expression	go to state 114
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 76

    unary_exp  ->  TMINUS unary_exp .   (rule 82)

    $default	reduce using rule 82 (unary_exp)



state 77

    unary_exp  ->  TINC unary_exp .   (rule 84)

    $default	reduce using rule 84 (unary_exp)



state 78

    unary_exp  ->  TDEC unary_exp .   (rule 85)

    $default	reduce using rule 85 (unary_exp)



state 79

    primary_exp  ->  TOSBRA expression . TCSBRA   (rule 98)

    TCSBRA	shift, and go to state 115



state 80

    unary_exp  ->  TNOT unary_exp .   (rule 83)

    $default	reduce using rule 83 (unary_exp)



state 81

    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list error .   (rule 24)

    $default	reduce using rule 24 (compound_st)



state 82

    compound_st  ->  TOMBRA opt_dcl_list opt_stat_list TCMBRA .   (rule 23)

    $default	reduce using rule 23 (compound_st)



state 83

    statement_list  ->  statement_list statement .   (rule 41)

    $default	reduce using rule 41 (statement_list)



state 84

    expression_st  ->  opt_expression TSEMI .   (rule 47)

    $default	reduce using rule 47 (expression_st)



state 85

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 63)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    logical_and_exp	go to state 116
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 86

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 65)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    equality_exp	go to state 118
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 87

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 67)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    relational_exp	go to state 119
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 88

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 68)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    relational_exp	go to state 120
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 89

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 72)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    additive_exp	go to state 121
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 90

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 71)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    additive_exp	go to state 122
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 91

    relational_exp  ->  relational_exp TOVER . additive_exp   (rule 70)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    additive_exp	go to state 123
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 92

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 73)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    additive_exp	go to state 124
    multiplicative_exp	go to state 60
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 93

    additive_exp  ->  additive_exp TPLUS . multiplicative_exp   (rule 75)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    multiplicative_exp	go to state 125
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 94

    additive_exp  ->  additive_exp TMINUS . multiplicative_exp   (rule 76)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    multiplicative_exp	go to state 126
    unary_exp	go to state 117
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 95

    multiplicative_exp  ->  multiplicative_exp TSTAR . unary_exp   (rule 78)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    unary_exp	go to state 127
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 96

    multiplicative_exp  ->  multiplicative_exp TSLASH . unary_exp   (rule 79)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    unary_exp	go to state 128
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 97

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 80)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    unary_exp	go to state 129
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 98

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 56)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    assignment_exp	go to state 130
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 99

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 57)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    assignment_exp	go to state 131
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 100

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 58)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    assignment_exp	go to state 132
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 101

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 59)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    assignment_exp	go to state 133
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 102

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 60)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    assignment_exp	go to state 134
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 103

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 61)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    assignment_exp	go to state 135
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 104

    postfix_exp  ->  postfix_exp TINC .   (rule 89)

    $default	reduce using rule 89 (postfix_exp)



state 105

    postfix_exp  ->  postfix_exp TDEC .   (rule 90)

    $default	reduce using rule 90 (postfix_exp)



state 106

    postfix_exp  ->  postfix_exp TOSBRA . opt_actual_param TCSBRA   (rule 88)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    $default	reduce using rule 92 (opt_actual_param)

    assignment_exp	go to state 136
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    opt_actual_param	go to state 137
    actual_param	go to state 138
    actual_param_list	go to state 139
    primary_exp	go to state 63



state 107

    postfix_exp  ->  postfix_exp TOLBRA . expression TCLBRA   (rule 87)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    expression	go to state 140
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 108

    declarator  ->  TIDENT TOLBRA opt_number TCLBRA .   (rule 35)

    $default	reduce using rule 35 (declarator)



state 109

    param_dcl  ->  dcl_spec declarator .   (rule 22)

    $default	reduce using rule 22 (param_dcl)



state 110

    formal_param  ->  TOSBRA opt_formal_param TCSBRA .   (rule 17)

    $default	reduce using rule 17 (formal_param)



state 111

    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 21)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3

    dcl_spec	go to state 67
    dcl_specifiers	go to state 9
    dcl_specifier	go to state 10
    type_qualifier	go to state 11
    type_specifier	go to state 12
    param_dcl	go to state 141



state 112

    if_st  ->  TIF TOSBRA expression . TCSBRA statement   (rule 50)
    if_st  ->  TIF TOSBRA expression . TCSBRA statement TELSE statement   (rule 51)

    TCSBRA	shift, and go to state 142



state 113

    return_st  ->  TRETURN opt_expression TSEMI .   (rule 53)

    $default	reduce using rule 53 (return_st)



state 114

    while_st  ->  TWHILE TOSBRA expression . TCSBRA statement   (rule 52)

    TCSBRA	shift, and go to state 143



state 115

    primary_exp  ->  TOSBRA expression TCSBRA .   (rule 98)

    $default	reduce using rule 98 (primary_exp)



state 116

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 63)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 65)

    TAND	shift, and go to state 86

    $default	reduce using rule 63 (logical_or_exp)



state 117

    multiplicative_exp  ->  unary_exp .   (rule 77)

    $default	reduce using rule 77 (multiplicative_exp)



state 118

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 65)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 67)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 68)

    TEQUAL	shift, and go to state 87
    TNOTEQU	shift, and go to state 88

    $default	reduce using rule 65 (logical_and_exp)



state 119

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 67)
    relational_exp  ->  relational_exp . TOVER additive_exp   (rule 70)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 71)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 72)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 73)

    TGREATE	shift, and go to state 89
    TLESS	shift, and go to state 90
    TOVER	shift, and go to state 91
    TLESSE	shift, and go to state 92

    $default	reduce using rule 67 (equality_exp)



state 120

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 68)
    relational_exp  ->  relational_exp . TOVER additive_exp   (rule 70)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 71)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 72)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 73)

    TGREATE	shift, and go to state 89
    TLESS	shift, and go to state 90
    TOVER	shift, and go to state 91
    TLESSE	shift, and go to state 92

    $default	reduce using rule 68 (equality_exp)



state 121

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 72)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 75)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 76)

    TPLUS	shift, and go to state 93
    TMINUS	shift, and go to state 94

    $default	reduce using rule 72 (relational_exp)



state 122

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 71)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 75)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 76)

    TPLUS	shift, and go to state 93
    TMINUS	shift, and go to state 94

    $default	reduce using rule 71 (relational_exp)



state 123

    relational_exp  ->  relational_exp TOVER additive_exp .   (rule 70)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 75)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 76)

    TPLUS	shift, and go to state 93
    TMINUS	shift, and go to state 94

    $default	reduce using rule 70 (relational_exp)



state 124

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 73)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 75)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 76)

    TPLUS	shift, and go to state 93
    TMINUS	shift, and go to state 94

    $default	reduce using rule 73 (relational_exp)



state 125

    additive_exp  ->  additive_exp TPLUS multiplicative_exp .   (rule 75)
    multiplicative_exp  ->  multiplicative_exp . TSTAR unary_exp   (rule 78)
    multiplicative_exp  ->  multiplicative_exp . TSLASH unary_exp   (rule 79)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 80)

    TSTAR	shift, and go to state 95
    TSLASH	shift, and go to state 96
    TMOD	shift, and go to state 97

    $default	reduce using rule 75 (additive_exp)



state 126

    additive_exp  ->  additive_exp TMINUS multiplicative_exp .   (rule 76)
    multiplicative_exp  ->  multiplicative_exp . TSTAR unary_exp   (rule 78)
    multiplicative_exp  ->  multiplicative_exp . TSLASH unary_exp   (rule 79)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 80)

    TSTAR	shift, and go to state 95
    TSLASH	shift, and go to state 96
    TMOD	shift, and go to state 97

    $default	reduce using rule 76 (additive_exp)



state 127

    multiplicative_exp  ->  multiplicative_exp TSTAR unary_exp .   (rule 78)

    $default	reduce using rule 78 (multiplicative_exp)



state 128

    multiplicative_exp  ->  multiplicative_exp TSLASH unary_exp .   (rule 79)

    $default	reduce using rule 79 (multiplicative_exp)



state 129

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 80)

    $default	reduce using rule 80 (multiplicative_exp)



state 130

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 56)

    $default	reduce using rule 56 (assignment_exp)



state 131

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 57)

    $default	reduce using rule 57 (assignment_exp)



state 132

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 58)

    $default	reduce using rule 58 (assignment_exp)



state 133

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 59)

    $default	reduce using rule 59 (assignment_exp)



state 134

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 60)

    $default	reduce using rule 60 (assignment_exp)



state 135

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 61)

    $default	reduce using rule 61 (assignment_exp)



state 136

    actual_param_list  ->  assignment_exp .   (rule 94)

    $default	reduce using rule 94 (actual_param_list)



state 137

    postfix_exp  ->  postfix_exp TOSBRA opt_actual_param . TCSBRA   (rule 88)

    TCSBRA	shift, and go to state 144



state 138

    opt_actual_param  ->  actual_param .   (rule 91)

    $default	reduce using rule 91 (opt_actual_param)



state 139

    actual_param  ->  actual_param_list .   (rule 93)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 95)

    TCOMMA	shift, and go to state 145

    $default	reduce using rule 93 (actual_param)



state 140

    postfix_exp  ->  postfix_exp TOLBRA expression . TCLBRA   (rule 87)

    TCLBRA	shift, and go to state 146



state 141

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 21)

    $default	reduce using rule 21 (formal_param_list)



state 142

    if_st  ->  TIF TOSBRA expression TCSBRA . statement   (rule 50)
    if_st  ->  TIF TOSBRA expression TCSBRA . statement TELSE statement   (rule 51)

    TIF 	shift, and go to state 34
    TRETURN	shift, and go to state 35
    TWHILE	shift, and go to state 36
    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TOMBRA	shift, and go to state 15
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    $default	reduce using rule 49 (opt_expression)

    compound_st	go to state 44
    statement	go to state 147
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 143

    while_st  ->  TWHILE TOSBRA expression TCSBRA . statement   (rule 52)

    TIF 	shift, and go to state 34
    TRETURN	shift, and go to state 35
    TWHILE	shift, and go to state 36
    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TOMBRA	shift, and go to state 15
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    $default	reduce using rule 49 (opt_expression)

    compound_st	go to state 44
    statement	go to state 148
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 144

    postfix_exp  ->  postfix_exp TOSBRA opt_actual_param TCSBRA .   (rule 88)

    $default	reduce using rule 88 (postfix_exp)



state 145

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 95)

    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    assignment_exp	go to state 149
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 146

    postfix_exp  ->  postfix_exp TOLBRA expression TCLBRA .   (rule 87)

    $default	reduce using rule 87 (postfix_exp)



state 147

    if_st  ->  TIF TOSBRA expression TCSBRA statement .   (rule 50)
    if_st  ->  TIF TOSBRA expression TCSBRA statement . TELSE statement   (rule 51)

    TELSE	shift, and go to state 150

    $default	reduce using rule 50 (if_st)



state 148

    while_st  ->  TWHILE TOSBRA expression TCSBRA statement .   (rule 52)

    $default	reduce using rule 52 (while_st)



state 149

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 95)

    $default	reduce using rule 95 (actual_param_list)



state 150

    if_st  ->  TIF TOSBRA expression TCSBRA statement TELSE . statement   (rule 51)

    TIF 	shift, and go to state 34
    TRETURN	shift, and go to state 35
    TWHILE	shift, and go to state 36
    TIDENT	shift, and go to state 37
    TMINUS	shift, and go to state 38
    TINC	shift, and go to state 39
    TDEC	shift, and go to state 40
    TOSBRA	shift, and go to state 41
    TOMBRA	shift, and go to state 15
    TNUMBER	shift, and go to state 42
    TNOT	shift, and go to state 43

    $default	reduce using rule 49 (opt_expression)

    compound_st	go to state 44
    statement	go to state 151
    expression_st	go to state 48
    opt_expression	go to state 49
    if_st	go to state 50
    while_st	go to state 51
    return_st	go to state 52
    expression	go to state 53
    assignment_exp	go to state 54
    logical_or_exp	go to state 55
    logical_and_exp	go to state 56
    equality_exp	go to state 57
    relational_exp	go to state 58
    additive_exp	go to state 59
    multiplicative_exp	go to state 60
    unary_exp	go to state 61
    postfix_exp	go to state 62
    primary_exp	go to state 63



state 151

    if_st  ->  TIF TOSBRA expression TCSBRA statement TELSE statement .   (rule 51)

    $default	reduce using rule 51 (if_st)



state 152

    $   	go to state 153



state 153

    $   	go to state 154



state 154

    $default	accept
